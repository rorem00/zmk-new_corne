#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };

        Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 32>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        power {
            bindings = <&kp CARET>;
            key-positions = <10 11>;
        };

        label {
            bindings = <&kp UNDERSCORE>;
            key-positions = <14 25>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <26 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp LEFT_WIN  &kp Q  &kp W           &kp E        &kp R             &kp T                          &trans          &kp Y          &kp U             &kp I            &kp O           &kp P      &trans
&trans        &kp A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G                  &trans  &trans  &trans  &kp H          &mt LEFT_SHIFT J  &mt LCTRL K      &mt LEFT_ALT L  &kp SEMI   &trans
&trans        &kp Z  &kp X           &kp C        &kp V             &kp B        &trans            &trans          &kp N          &kp M             &kp COMMA        &kp PERIOD      &kp SLASH  &trans
                                     &kp TAB      &lt 1 SPACE       &lt 2 ENTER                                    &kp BACKSPACE  &lt 3 SPACE       &lt 2 RIGHT_ALT
            >;
        };

        equation {
            display-name = "NUMBER and SYMBOL";
            bindings = <
&kp GRAVE   &kp EXCLAMATION  &kp QUESTION   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE                         &trans          &kp PLUS       &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp BSPC
&kp TILDE   &kp AT_SIGN      &kp HASH       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH            &trans  &trans  &trans  &kp MINUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &trans
&kp DOLLAR  &kp PERCENT      &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans            &trans          &kp EQUAL      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
                                            &trans                &trans                 &trans                                           &kp BACKSPACE  &kp N0        &kp PERIOD
            >;
        };

        control {
            display-name = "CONTROL";
            bindings = <
&trans  &trans  &trans        &trans     &trans          &trans                    &trans          &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans            &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans        &trans     &trans          &trans  &trans            &trans          &trans    &trans    &trans        &trans     &trans  &trans
                              &trans     &trans          &trans                                    &trans    &trans    &trans
            >;
        };

        function {
            bindings = <
&trans  &kp K_MUTE       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans                    &trans          &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp C_VOLUME_UP  &kp INSERT       &kp HOME        &kp PAGE_UP      &trans            &trans  &trans  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &kp C_VOL_DN     &kp DELETE       &kp END         &kp PAGE_DOWN    &trans  &trans            &trans          &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                                          &trans          &trans           &trans                                    &trans   &trans  &trans
            >;

            label = "FUNCTION";
        };
    };
};
