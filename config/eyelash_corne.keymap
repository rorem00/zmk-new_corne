#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };

        Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC             &kp Q  &kp W  &kp E         &kp R        &kp T                           &trans          &kp Y  &kp U        &kp I          &kp O      &kp P       &kp BSPC
&mt LEFT_SHIFT TAB  &kp A  &kp S  &kp D         &kp F        &kp G                   &trans  &trans  &trans  &kp H  &kp J        &kp K          &kp L      &kp SEMI    &kp SQT
&kp LCTRL           &kp Z  &kp X  &kp C         &kp V        &kp B         &trans            &trans          &kp B  &kp N        &kp M          &kp COMMA  &kp PERIOD  &kp RIGHT_SHIFT
                                  &lt 2 ESCAPE  &lt 1 ENTER  &kp LEFT_ALT                                    &mo 3  &lt 2 SPACE  &kp BACKSPACE
            >;
        };

        lower_layer {
            display-name = "NUMBER and SYMBOL";
            bindings = <
&trans  &kp EXCLAMATION  &kp QUESTION   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE                         &trans          &kp CARET       &kp N7        &kp N8        &kp N9        &kp PLUS   &kp BSPC
&trans  &kp AT_SIGN      &kp HASH       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH            &trans  &trans  &trans  &kp UNDERSCORE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &kp ASTERISK
&trans  &kp PERCENT      &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans            &trans          &kp SLASH       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &none
                                        &trans                &trans                 &trans                                           &kp ASTERISK    &kp N0        &kp PERIOD
            >;
        };

        raise_layer {
            display-name = "CONTROL";
            bindings = <
&trans      &trans          &trans          &trans        &mkp LCLK        &mkp RCLK                    &trans          &trans    &trans    &trans        &trans     &trans  &trans
&kp LSHIFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans               &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&kp LCTRL   &trans          &trans          &trans        &trans           &trans     &trans            &trans          &trans    &trans    &trans        &trans     &trans  &trans
                                            &trans        &trans           &trans                                       &trans    &trans    &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                    &trans          &kp K_MUTE       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans            &trans  &trans  &trans  &kp C_VOL_DN     &kp INSERT       &kp HOME        &kp PAGE_UP      &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans            &trans          &kp C_VOLUME_UP  &kp DELETE       &kp END         &kp PAGE_DOWN    &trans  &trans
                         &trans   &trans   &trans                                    &trans           &trans           &trans
            >;
        };
    };
};
