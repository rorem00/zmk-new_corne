#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <150>;
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
        };

        Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 32>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        power {
            bindings = <&kp CARET>;
            key-positions = <8 9>;
        };

        label {
            bindings = <&kp UNDERSCORE>;
            key-positions = <37 38>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <26 25>;
        };

        bracket_closed {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <5 4>;
        };

        brace_closed {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <17 18>;
        };

        parenthesis_closed {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <32 33>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 8>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <22 23>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&trans  &kp Q        &kp W             &kp E         &kp R           &kp T                        &trans          &kp Y        &kp U           &kp I          &kp O         &kp P                &tog 4
&trans  &mt LCTRL A  &mt LEFT_SHIFT S  &lt 1 D       &mt LEFT_ALT F  &kp G                &trans  &trans  &trans  &kp H        &mt LEFT_ALT J  &lt 1 K        &mt LSHIFT L  &mt LCTRL SEMICOLON  &kp CAPS
&trans  &kp Z        &kp X             &kp C         &kp V           &kp B      &trans            &trans          &kp N        &kp M           &kp COMMA      &kp PERIOD    &kp SLASH            &trans
                                       &kp LEFT_WIN  &kp SPACE       &lt 2 TAB                                    &lt 3 ENTER  &kp BACKSPACE   &kp RIGHT_ALT
            >;
        };

        NuSy {
            display-name = "number and symbol";
            bindings = <
&trans  &trans  &kp GRAVE    &kp EXCLAMATION  &kp QUESTION   &kp PIPE                                &trans          &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans      &trans
&trans  &trans  &kp TILDE    &kp AT_SIGN      &kp HASH       &kp NON_US_BACKSLASH            &trans  &trans  &trans  &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans      &trans
&trans  &trans  &kp PERCENT  &kp DOLLAR       &kp AMPERSAND  &trans                &trans            &trans          &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                             &trans           &trans         &trans                                                  &trans        &trans        &trans
            >;
        };

        Func {
            display-name = "function";
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOLUME_UP                      &trans          &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP      &kp END       &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp C_VOLUME_DOWN            &trans  &trans  &trans  &kp LEFT  &kp DOWN       &kp UP           &kp RIGHT     &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp C_MUTE         &trans            &trans          &trans    &kp DELETE     &kp PRINTSCREEN  &kp CAPSLOCK  &trans  &trans
                         &trans  &trans  &trans                                               &trans    &trans         &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp HOME        &kp PAGE_UP     &kp PAGE_DOWN    &kp END          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans          &kp DELETE      &kp PRINTSCREEN  &trans           &trans  &trans
                        &trans  &trans  &trans                                    &trans          &trans          &trans
            >;
        };

        Game {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T                     &trans          &kp Y   &kp U   &kp I      &kp O       &kp P          &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G             &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L       &kp SEMICOLON  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B   &trans            &trans          &kp N   &kp M   &kp COMMA  &kp PERIOD  &kp SLASH      &trans
                      &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
